{"version":3,"file":"rearrange-area.min.js","sources":["../src/rearrange-area.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * AMD module used when rearranging a custom certificate.\n *\n * @module     enrol_coursepayment/rearrange-area\n * @copyright  2016 Mark Nelson <markn@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/yui', 'core/fragment', 'enrol_coursepayment/dialogue', 'core/notification',\n        'core/str', 'core/templates', 'core/ajax', 'core/log'],\n    function ($, Y, fragment, Dialogue, notification, str, template, ajax, Log) {\n\n        Log.debug('Rearrange area: Initialising');\n\n        /**\n         * RearrangeArea class.\n         *\n         * @param {String} selector The rearrange PDF selector\n         */\n        let RearrangeArea = function (selector) {\n            this._node = $(selector);\n            this._setEvents();\n        };\n\n        RearrangeArea.prototype.COURSEPAYMENT_REF_POINT_TOPLEFT = 0;\n        RearrangeArea.prototype.COURSEPAYMENT_REF_POINT_TOPCENTER = 1;\n        RearrangeArea.prototype.COURSEPAYMENT_REF_POINT_TOPRIGHT = 2;\n        RearrangeArea.prototype.PIXELSINMM = 3.779527559055;\n\n        RearrangeArea.prototype._setEvents = function () {\n            this._node.on('click', '.element', this._editElement.bind(this));\n        };\n\n        RearrangeArea.prototype._editElement = function (event) {\n            let elementid = event.currentTarget.id.substr(8);\n            let contextid = this._node.attr('data-contextid');\n            let params = {\n                'elementid': elementid\n            };\n\n            fragment.loadFragment('enrol_coursepayment', 'editelement', contextid, params).done(function (html, js) {\n                str.get_string('editelement', 'enrol_coursepayment').done(function (title) {\n                    // TODO: moodle-core-formchangechecker is being depricated Moodle 4.0+.\n                    // TODO: mod_customcert (where this is copied from) still has this in their 4.3 dev branch though.\n                    Y.use('moodle-core-formchangechecker', function () {\n                        new Dialogue(\n                            title,\n                            '<div id=\\'elementcontent\\'></div>',\n                            this._editElementDialogueConfig.bind(this, elementid, html, js),\n                            undefined,\n                            true\n                        );\n                    }.bind(this));\n                }.bind(this));\n            }.bind(this)).fail(notification.exception);\n        };\n\n        RearrangeArea.prototype._editElementDialogueConfig = function (elementid, html, js, popup) {\n            // Place the content in the dialogue.\n            template.replaceNode('#elementcontent', html, js);\n\n            // We may have dragged the element changing it's position.\n            // Ensure the form has the current up-to-date location.\n            this._setPositionInForm(elementid);\n\n            // Add events for when we save, close and cancel the page.\n            let body = $(popup.getContent());\n            body.on('click', '#id_submitbutton', function (e) {\n                // Do not want to ask the user if they wish to stay on page after saving.\n                M.core_formchangechecker.reset_form_dirty_state();\n                // Save the data.\n                this._saveElement(elementid).then(function () {\n                    // Update the DOM to reflect the adjusted value.\n                    this._getElementHTML(elementid).done(function (html) {\n                        let elementNode = this._node.find('#element-' + elementid);\n                        let refpoint = parseInt($('#id_refpoint').val());\n                        let refpointClass = '';\n                        if (refpoint == this.COURSEPAYMENT_REF_POINT_TOPLEFT) {\n                            refpointClass = 'refpoint-left';\n                        } else if (refpoint == this.COURSEPAYMENT_REF_POINT_TOPCENTER) {\n                            refpointClass = 'refpoint-center';\n                        } else if (refpoint == this.COURSEPAYMENT_REF_POINT_TOPRIGHT) {\n                            refpointClass = 'refpoint-right';\n                        }\n                        elementNode.empty().append(html);\n                        // Update the ref point.\n                        elementNode.removeClass();\n                        elementNode.addClass('element ' + refpointClass);\n                        elementNode.attr('data-refpoint', refpoint);\n                        // Move the element.\n                        let posx = $('#editelementform #id_posx').val();\n                        let posy = $('#editelementform #id_posy').val();\n                        this._setPosition(elementid, refpoint, posx, posy);\n                        // All done.\n                        popup.close();\n                    }.bind(this));\n                }.bind(this)).fail(notification.exception);\n                e.preventDefault();\n            }.bind(this));\n\n            body.on('click', '#id_cancel', function (e) {\n                popup.close();\n                e.preventDefault();\n            });\n        };\n\n        RearrangeArea.prototype._setPosition = function (elementid, refpoint, posx, posy) {\n            let element = Y.one('#element-' + elementid);\n\n            posx = Y.one('#pdf').getX() + posx * this.PIXELSINMM;\n            posy = Y.one('#pdf').getY() + posy * this.PIXELSINMM;\n            let nodewidth = parseFloat(element.getComputedStyle('width'));\n            let maxwidth = element.width * this.PIXELSINMM;\n\n            if (maxwidth && (nodewidth > maxwidth)) {\n                nodewidth = maxwidth;\n            }\n\n            switch (refpoint) {\n                case this.COURSEPAYMENT_REF_POINT_TOPCENTER:\n                    posx -= nodewidth / 2;\n                    break;\n                case this.COURSEPAYMENT_REF_POINT_TOPRIGHT:\n                    posx = posx - nodewidth + 2;\n                    break;\n            }\n\n            element.setX(posx);\n            element.setY(posy);\n        };\n\n        RearrangeArea.prototype._setPositionInForm = function (elementid) {\n            let posxelement = $('#editelementform #id_posx');\n            let posyelement = $('#editelementform #id_posy');\n\n            if (posxelement.length && posyelement.length) {\n                let element = Y.one('#element-' + elementid);\n                let posx = element.getX() - Y.one('#pdf').getX();\n                let posy = element.getY() - Y.one('#pdf').getY();\n                let refpoint = parseInt(element.getData('refpoint'));\n                let nodewidth = parseFloat(element.getComputedStyle('width'));\n\n                switch (refpoint) {\n                    case this.COURSEPAYMENT_REF_POINT_TOPCENTER:\n                        posx += nodewidth / 2;\n                        break;\n                    case this.COURSEPAYMENT_REF_POINT_TOPRIGHT:\n                        posx += nodewidth;\n                        break;\n                }\n\n                posx = Math.round(parseFloat(posx / this.PIXELSINMM));\n                posy = Math.round(parseFloat(posy / this.PIXELSINMM));\n\n                posxelement.val(posx);\n                posyelement.val(posy);\n            }\n        };\n\n        RearrangeArea.prototype._getElementHTML = function (elementid) {\n            // Get the variables we need.\n            let templateid = this._node.attr('data-templateid');\n\n            // Call the web service to get the updated element.\n            let promises = ajax.call([{\n                methodname: 'enrol_coursepayment_get_element_html',\n                args: {\n                    templateid: templateid,\n                    elementid: elementid\n                }\n            }]);\n\n            // Return the promise.\n            return promises[0];\n        };\n\n        RearrangeArea.prototype._saveElement = function (elementid) {\n            // Get the variables we need.\n            let templateid = this._node.attr('data-templateid');\n            let inputs = $('#editelementform').serializeArray();\n\n            // Call the web service to save the element.\n            let promises = ajax.call([{\n                methodname: 'enrol_coursepayment_save_element',\n                args: {\n                    templateid: templateid,\n                    elementid: elementid,\n                    values: inputs\n                }\n            }]);\n\n            // Return the promise.\n            return promises[0];\n        };\n\n        return {\n            init: function (selector) {\n                new RearrangeArea(selector);\n            }\n        };\n    }\n);\n"],"names":["define","$","Y","fragment","Dialogue","notification","str","template","ajax","Log","debug","RearrangeArea","selector","_node","_setEvents","prototype","COURSEPAYMENT_REF_POINT_TOPLEFT","COURSEPAYMENT_REF_POINT_TOPCENTER","COURSEPAYMENT_REF_POINT_TOPRIGHT","PIXELSINMM","on","this","_editElement","bind","event","elementid","currentTarget","id","substr","contextid","attr","params","loadFragment","done","html","js","get_string","title","use","_editElementDialogueConfig","undefined","fail","exception","popup","replaceNode","_setPositionInForm","body","getContent","e","M","core_formchangechecker","reset_form_dirty_state","_saveElement","then","_getElementHTML","elementNode","find","refpoint","parseInt","val","refpointClass","empty","append","removeClass","addClass","posx","posy","_setPosition","close","preventDefault","element","one","getX","getY","nodewidth","parseFloat","getComputedStyle","maxwidth","width","setX","setY","posxelement","posyelement","length","getData","Math","round","templateid","call","methodname","args","inputs","serializeArray","values","init"],"mappings":"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"}